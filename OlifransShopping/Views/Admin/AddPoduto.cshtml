@model OlifransShopping.DAL.Produto

@{
    ViewBag.Title = "AddPoduto";
    Layout = "~/Views/Shared/_AdminLayout.cshtml";
}

<h2>Adcionar Podutos</h2>

<div class="container">

    @using (Html.BeginForm("AddPoduto", "Admin", FormMethod.Post, new { enctype = "multipart/form-data" }))

    {
        @Html.AntiForgeryToken()

        <div class="form-horizontal">

            <hr />
            @Html.ValidationSummary(true, "", new { @class = "text-danger" })
            <div class="form-group">
                @Html.LabelFor(model => model.ProdutoNome, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.ProdutoNome, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.ProdutoNome, "", new { @class = "text-danger" })
                </div>
            </div>


            @{
                List<SelectListItem> data = ViewBag.CategoriaList;
            }

            <div class="form-group">
                @Html.LabelFor(model => model.CategoriaId, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.CategoriaId, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.DropDownListFor(model => model.CategoriaId, data, "---Selecione Uma das Categorias Abaixo---", new { @class = "form-control" })
                    @Html.ValidationMessageFor(model => model.CategoriaId, "", new { @class = "text-danger" })
                </div>
            </div>




            <div class="form-group">
                @Html.LabelFor(model => model.StatusAtivo, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.StatusAtivo, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.CheckBox("StatusAtivo")
                    @Html.ValidationMessageFor(model => model.StatusAtivo, "", new { @class = "text-danger" })
                </div>
            </div>

            @Html.HiddenFor(model => model.StatusDelete)
            @*<div class="form-group">
                    @Html.LabelFor(model => model.StatusDelete, htmlAttributes: new { @class = "control-label col-md-2" })
                    <div class="col-md-10">
                        @Html.EditorFor(model => model.StatusDelete, new { htmlAttributes = new { @class = "form-control" } })
                        @Html.ValidationMessageFor(model => model.StatusDelete, "", new { @class = "text-danger" })
                    </div>
                </div>*@


            @*
                    !!!Inserido direto no metodo =>   public ActionResult AddProduto(Produto tbl) = tbl.CriadoData = DateTime.Now;
                <div class="form-group">
                        @Html.LabelFor(model => model.CriadoData, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.CriadoData, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.CriadoData, "", new { @class = "text-danger" })
                        </div>
                    </div>

                     !!!Inserido direto no metodo =>   public ActionResult EditarProduto(Produto tbl) = tbl.ModificadoData = DateTime.Now;
                    <div class="form-group">
                        @Html.LabelFor(model => model.ModificadoData, htmlAttributes: new { @class = "control-label col-md-2" })
                        <div class="col-md-10">
                            @Html.EditorFor(model => model.ModificadoData, new { htmlAttributes = new { @class = "form-control" } })
                            @Html.ValidationMessageFor(model => model.ModificadoData, "", new { @class = "text-danger" })
                        </div>
                    </div>*@

            <div class="form-group">
                @Html.LabelFor(model => model.Descricao, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Descricao, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Descricao, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.ProdutoImage, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.ProdutoImage, new { htmlAttributes = new { @class = "form-control" } })*@

                    <input type="file" name="file" id="file" style="width: 100%;" />
                    @Html.ValidationMessageFor(model => model.ProdutoImage, "", new { @class = "text-danger" })
                </div>
            </div>


            <div class="form-group">
                @Html.LabelFor(model => model.EmDestaque, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @*@Html.EditorFor(model => model.EmDestaque, new { htmlAttributes = new { @class = "form-control" } })*@
                    @Html.CheckBox("EmDestaque")
                    @Html.ValidationMessageFor(model => model.EmDestaque, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.Quantidade, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.Quantidade, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.Quantidade, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrecoUnitario, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PrecoUnitario, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrecoUnitario, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                @Html.LabelFor(model => model.PrecoTotal, htmlAttributes: new { @class = "control-label col-md-2" })
                <div class="col-md-10">
                    @Html.EditorFor(model => model.PrecoTotal, new { htmlAttributes = new { @class = "form-control" } })
                    @Html.ValidationMessageFor(model => model.PrecoTotal, "", new { @class = "text-danger" })
                </div>
            </div>

            <div class="form-group">
                <div class="col-md-offset-2 col-md-10">
                    <input type="submit" value="Salvar" class="btn btn-primary" />
                </div>
            </div>
        </div>
    }

</div>

@*<div>
    @Html.ActionLink("Back to List", "Index")
</div>*@
